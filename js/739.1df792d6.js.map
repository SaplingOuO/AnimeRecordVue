{"version":3,"file":"js/739.1df792d6.js","mappings":"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","sources":["webpack://animerecordvue/./src/components/MyComponents/ThreeJs/ThreeExample.vue","webpack://animerecordvue/./src/components/MyComponents/ThreeJs/ThreeExample.vue?09bc"],"sourcesContent":["<script>\r\nimport * as THREE from 'three';\r\n\r\nexport default {\r\n    data() {\r\n        return{\r\n            Data:[\r\n                {shape:'cube'},\r\n                {shape:'sphere'},\r\n                {shape:'cone'},\r\n                {shape:'capsule'},\r\n                {shape:'cylinder'},\r\n                {shape:'dodecahedron'},\r\n                {shape:'icosahedron'},\r\n                {shape:'torus'},\r\n                {shape:'torusknot'},\r\n            ],\r\n        };\r\n    },\r\n    mounted() {\r\n        this.scenes=[];\r\n        this.cameras=[];\r\n        this.renderers=[];\r\n        this.meshes=[];\r\n        this.edges = [];\r\n            \r\n        this.Data.forEach((item, index) =>{\r\n            this.initThreeJS(index, item.shape);\r\n        });\r\n        \r\n        this.animate();\r\n    },\r\n    methods: {\r\n        initThreeJS(index, shape){\r\n            const scene = new THREE.Scene();\r\n            const camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);\r\n            const renderer = new THREE.WebGLRenderer();\r\n            renderer.setSize(250, 250);\r\n\r\n            const containerRef = `canvasContainer${index}`;\r\n            this.$nextTick(() => {\r\n                this.$refs[containerRef][0].appendChild(renderer.domElement);\r\n            });\r\n\r\n            let geometry;\r\n            switch(shape){\r\n                case 'cube':\r\n                    geometry = new THREE.BoxGeometry();\r\n                    break;\r\n                case 'sphere':\r\n                    geometry = new THREE.SphereGeometry();\r\n                    break;\r\n                case 'cone':\r\n                    geometry = new THREE.ConeGeometry();\r\n                    break;\r\n                case 'capsule':\r\n                    geometry = new THREE.CapsuleGeometry();\r\n                    break;\r\n                case 'cylinder':\r\n                    geometry = new THREE.CylinderGeometry();\r\n                    break;\r\n                case 'dodecahedron':\r\n                    geometry = new THREE.DodecahedronGeometry();\r\n                    break;\r\n                case 'icosahedron':\r\n                    geometry = new THREE.IcosahedronGeometry();\r\n                    break;\r\n                case 'torus':\r\n                    geometry = new THREE.TorusGeometry();\r\n                    break;\r\n                case 'torusknot':\r\n                    geometry = new THREE.TorusKnotGeometry();\r\n                    break;\r\n                default:\r\n                    geometry = new THREE.BoxGeometry();\r\n            }\r\n\r\n            const material = new THREE.MeshBasicMaterial({color:0x00ff00});\r\n            const mesh = new THREE.Mesh(geometry, material);\r\n            scene.add(mesh);\r\n\r\n            const edgesGeometry = new THREE.EdgesGeometry(geometry);\r\n            const edgesMaterial = new THREE.LineBasicMaterial({ color: 0x000000 });\r\n            const edges = new THREE.LineSegments(edgesGeometry, edgesMaterial);\r\n            scene.add(edges);\r\n\r\n            camera.position.z = 5;\r\n\r\n            this.scenes.push(scene);\r\n            this.cameras.push(camera);\r\n            this.renderers.push(renderer);\r\n            this.meshes.push(mesh);\r\n            this.edges.push(edges);\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate);\r\n            this.meshes.forEach((mesh) => {\r\n                mesh.rotation.x += 0.01;\r\n                mesh.rotation.y += 0.01;\r\n                mesh.rotation.z += 0.01;\r\n            });\r\n            this.edges.forEach((edges) => {\r\n                edges.rotation.x += 0.01;\r\n                edges.rotation.y += 0.01;\r\n                edges.rotation.z += 0.01;\r\n            });\r\n            this.renderers.forEach((renderer, index) => {\r\n                renderer.render(this.scenes[index], this.cameras[index])\r\n            });\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div class=\"row g-0\">\r\n        <div class=\"col g-4 d-flex justify-content-evenly\" v-for=\"(item, index) in Data\" :key=\"index\" :ref=\"'canvasContainer' + index\"></div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n</style>","import { render } from \"./ThreeExample.vue?vue&type=template&id=416f2167\"\nimport script from \"./ThreeExample.vue?vue&type=script&lang=js\"\nexport * from \"./ThreeExample.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","Data","item","index","key","ref","data","shape","mounted","this","scenes","cameras","renderers","meshes","edges","forEach","initThreeJS","animate","methods","scene","THREE","camera","renderer","setSize","containerRef","geometry","$nextTick","$refs","appendChild","domElement","material","color","mesh","add","edgesGeometry","edgesMaterial","position","z","push","requestAnimationFrame","rotation","x","y","render","__exports__"],"sourceRoot":""}