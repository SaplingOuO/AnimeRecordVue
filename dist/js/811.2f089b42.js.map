{"version":3,"file":"js/811.2f089b42.js","mappings":"+MAgDkBA,IAAI,KAAKC,KAAK,KAAKC,IAAI,W,GACjCC,EAAAA,EAAAA,GAAI,mB,0CAJRC,EAAAA,EAAAA,IAMM,aALFD,EAAAA,EAAAA,GAAwG,MAApGE,MAAM,OAAOH,IAAI,iBAAiBI,UAA4D,GAAjDC,EAAAC,6C,WAEjDL,EAAAA,EAAAA,GAAsD,WAAtDM,EAAsD,UACtDC,GACAP,EAAAA,EAAAA,GAAgD,UAAvCQ,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAC,YAAAD,EAAAC,cAAAF,KAAY,gB,CAhDpC,OACIG,OACI,MAAO,CACHC,gBAAiB,CAAC,SAAS,SAC3BT,aAAc,GACdU,UAAW,EACXC,WAAY,EAEpB,EACAC,UACIC,YAAW,IAAMC,KAAKC,cAAc,IACxC,EACAC,QAAS,CACLD,aACI,MAAME,EAAQ,IACRC,EAAcJ,KAAKL,gBAAgBK,KAAKJ,WAC9CS,QAAQC,IAAIF,GACRJ,KAAKH,WAAaO,EAAYG,QAC9BP,KAAKd,cAAgBkB,EAAYI,OAAOR,KAAKH,YAC7CG,KAAKH,aACLE,WAAWC,KAAKC,WAAYE,KAE5BH,KAAKJ,YACLI,KAAKH,WAAa,EACdG,KAAKJ,UAAYI,KAAKL,gBAAgBY,SACtCP,KAAKd,cAAgB,OACrBa,WAAWC,KAAKC,WAAY,MAGxC,EACAR,aACIO,KAAKL,gBAAkBK,KAAKS,MAAMC,QAAQC,MAAMC,MAAM,MAEtDZ,KAAKd,aAAe,GACpBc,KAAKJ,UAAY,EACjBI,KAAKH,WAAa,EAClBE,YAAW,IAAMC,KAAKC,cAAc,IACxC,I,UChCR,MAAMY,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://animerecordvue/./src/components/MyComponents/animatedText.vue","webpack://animerecordvue/./src/components/MyComponents/animatedText.vue?5b37"],"sourcesContent":["<!-- 參考網站 https://hamsterism.com/articles/wrapable-typing-animation/ -->\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            sloganTextArray: [\"這是測試文字\",\"這是第二行\"],\r\n            animatedText: \"\",\r\n            textIndex: 0,\r\n            textLength: 0,\r\n        };\r\n    },\r\n    mounted() {\r\n        setTimeout(() => this.typeWriter(), 1000);\r\n    },\r\n    methods: {\r\n        typeWriter() {\r\n            const speed = 100;\r\n            const currentText = this.sloganTextArray[this.textIndex];\r\n            console.log(currentText);\r\n            if (this.textLength < currentText.length) {\r\n                this.animatedText += currentText.charAt(this.textLength);\r\n                this.textLength++;\r\n                setTimeout(this.typeWriter, speed);\r\n            }else{\r\n                this.textIndex++;\r\n                this.textLength = 0;\r\n                if (this.textIndex < this.sloganTextArray.length) {\r\n                    this.animatedText += \"<br>\";\r\n                    setTimeout(this.typeWriter, 1000);\r\n                }\r\n            }\r\n        },\r\n        changeText(){\r\n            this.sloganTextArray = this.$refs.myInput.value.split('\\n');\r\n            // this.sloganText = this.$refs.myInput.value;\r\n            this.animatedText = \"\";\r\n            this.textIndex = 0;\r\n            this.textLength = 0;\r\n            setTimeout(() => this.typeWriter(), 1000);\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div>\r\n        <h1 class=\"mb-0\" ref=\"newlineControl\" v-html=\"`${animatedText}<span id='spanCaret'>&nbsp;</span>`\"></h1>\r\n        <!-- <input ref=\"myInput\"> -->\r\n        <textarea row=\"12\" cols=\"50\" ref=\"myInput\"></textarea>\r\n        <br>\r\n        <button @click=\"changeText\">Change Text</button>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style>\r\n#spanCaret {\r\n  border-left: 5px solid rgb(0, 0, 0);\r\n  margin-left: 3px;\r\n  animation: blink-caret 1s infinite;\r\n}\r\n@keyframes blink-caret {\r\n  from {\r\n    border-color: transparent;\r\n  }\r\n  to {\r\n    border-color: rgb(0, 0, 0);\r\n  }\r\n}\r\n</style>","import { render } from \"./animatedText.vue?vue&type=template&id=7e46b263\"\nimport script from \"./animatedText.vue?vue&type=script&lang=js\"\nexport * from \"./animatedText.vue?vue&type=script&lang=js\"\n\nimport \"./animatedText.vue?vue&type=style&index=0&id=7e46b263&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["row","cols","ref","_createElementVNode","_createElementBlock","class","innerHTML","$data","animatedText","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","changeText","data","sloganTextArray","textIndex","textLength","mounted","setTimeout","this","typeWriter","methods","speed","currentText","console","log","length","charAt","$refs","myInput","value","split","__exports__","render"],"sourceRoot":""}